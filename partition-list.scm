(define (my-remove n sequence)
	(if (null? sequence)
		'()
		(if (< (car sequence) n)
			(my-remove n (cdr sequence))
			(cons (car sequence) (my-remove n (cdr sequence)))
		)
	)
)

(define (my-filter predicate sequence)
	(if (null? sequence)
		'()
		(if (predicate (car sequence))
			(cons (car sequence) (my-filter predicate (cdr sequence))) 
			(my-filter predicate (cdr sequence))
		)
	)
)


(define (split n sequence)
	(list (my-filter (lambda(x)(< x n)) sequence) (my-remove n sequence))
)
